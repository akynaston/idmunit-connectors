SAP IdMUnit Connector V.1.0
Date: 2009 June 1
Description: This connector simulates SAP transactions and data by generating iDocs and delivering them to the server running the SAP HR driver.

iDoc files are saved with a name that conforms to the following format:

(O)utput>_<client number>_<consecutive IDoc number generated by appending 0000000000 to the current timestamp>

SAP IdMUnit Connector Configuration steps:

Setup and configuration:
- Generate a sample IDoc of that transaction (i.e. add doc for user Happy Gilmore, user 12345678 with email address and description)
-- This sample doc should contain all attributes that are desired for inclusion and simulation
- Drop the sample IDoc in the IDoc incoming directory for the driver so that it will be picked up and viewable in the trace
- Note the association value, or unique identifier for the object in the sample iDoc (ex: 12345678 for a user or 50005199 for an Organizational Role)
- Search the sample IDoc for this unique key (i.e. 12345678 with EMPLOYID for a user or 50005199 with ORGROLID or 50005199 with POSITNID for a position) and replace with known constant like EMPLOYID, making sure to use the same number of characters that exist in the number (i.e. ensure that it is eight chars wide!!!)
- Update test spreadsheet to use in the DN the key to the constant (i.e. EMPLOYID=12345678 where 12345678 is the association ID of the object that will be generated)
- Add mapped attributes to the spreadsheet columns to provide additional data fields (i.e. P0002:VORNA:none:134:25 | Given Name) where the P0002 is the line Info-type IDoc row indicator, VORNA is the field name in SAP, none is the subtype in SAP, 134 is the offset from the beginning of EMPLOYID on that row and 25 is the field length) These can also be taken from the trace for each attr in the generated modify doc based off of the template file that was dropped in the first step
- Configure the IdMUnit SAP connector config in idmunit-config.xml (next section)

 

IdMUnit SAP Connector configuration (found in idmunit-config.xml)
- NNN SAP client number (used in IDoc file name - Driver will ignore if not a match with the driver option: "SAP User Client Number") ex: 030
- Path to store idocs locally
- Initial IDoc data offset (default: 64): This is the distance between the left column of the IDoc and the actual start of data.  This should be checked against a live template to ensure correctness)
ex: E2P1000001                    01600000000006830400007240007230401601S ORGROLID1000    1  2002060599991231E         00020020606WILLOUM        00000000DATA SEC    DATA SECURITY ANALYST
-- In the sample row above DATA SECURITY ANALYST starts at an offset of 98.  So its current start position minus 98 is 64
- Enable SCP (true/false)
- Name of WinSCP profile to access target UNIX server where SAP HR driver is running (this is a configured user/password through WinSCP that has been tested and security keys are cached)
- Static IDoc number prefix ex: 0000000000 (the current timestamp to the second will be appended to the end as in 000000000020090715210523
- File extension (optional) ex: the .idmunit in 000000000020090715210523.idmunit
- Configure the spreadsheet content (next section)

 

IdMUnit IDoc Generation action:
- verb: createIDoc
- Read in the specified IDoc template (ex: IDocTemplate: c:\work\IDocTemplates\addUser.idoc) storing each row as a separate object that can be accessed via iterator
- Search for key specified in DN and replace it with the specified value throughout the entire IDoc template ex: DN: EMPLOYID=12345678 (this will "unique-ify" the generated object to the one specified in the spreadsheet, provided the common name generated is also unique)
- For each attribute column in the spreadsheet parse as follows: ex: P0002:VORNA:none:134:25 with data of "Happy"
--Find all rows with P0002
--- for each rows of P0002 do the following:
---- Find the EMPLOYID and replace it with the value specified after the = in DN (i.e. 12345678)
------ Using the idoc-data-offset to the right and write 25 bytes of data from the spreadsheet data for that column (i.e. given name of "Happy                    ")
- (repeat for the next column)

- Save IDoc file as: (O)utput>_<client number>_<consecutive IDoc number generated by appending 0000000000 to the current timestamp> (ex: O_030_000000000020090701200000.idmunit)

- Create idmunit test spreadsheet to fulfill each documented use-case
- Add SCP capability to drop iDocs on remote UNIX server

